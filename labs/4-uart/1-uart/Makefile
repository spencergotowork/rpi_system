# simple test that you have your path defined.
# NAME = hello
NAME = hello-disable
# uncomment this to use the uart.c in the current directory.
UART = # uart.o

OBJS = $(NAME).o $(UART)

# check that your path is defined.
ifndef CS140E_2022_PATH
$(error CS140E_2022_PATH is not set: this should contain the absolute path to where this directory is.  Define it in your shell's initialiation.  For example, .tcshrc for tcsh or .bashrc for bash)
endif

include $(CS140E_2022_PATH)/libpi/defs.mk

# add all the .h's as dependencies, libpi and the makefile.
DEPS := $(MEMMAP) $(LPI) $(wildcard ./*.h) ./Makefile 

LIBS = $(LPI)  

all: libs $(OBJS) $(NAME).bin # run

libs: 
	make -C $(LPP)

no-uart: hello-no-uart.bin
	my-install $<

hello-no-uart.elf: $(NAME).o
	$(LD) $(START) $< -T $(LPP)/memmap -o $@  $(LIBS)

$(OBJS): $(DEPS)
%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) -c $< -o $@
%.o: %.S
	$(CC) -c $(CPP_ASFLAGS) $< -o $@

$(NAME).elf: $(OBJS) $(MEMMAP) $(DEPS) 
	$(LD) $(START) $(OBJS) -T $(LPP)/memmap -o $@  $(LIBS)

%.list: %.elf
	$(OD) -D   $*.elf > $*.list
%.bin: %.list
	$(OCP) $*.elf -O binary $*.bin

run: $(NAME).bin
	my-install $(NAME).bin

tags: 
	ctags *.[chSs] $(LPP)/*.[ch] $(LPP)/*.[chSs]

clean:
	rm -rf $(NAME) *~ tags *.o *.bin *.elf *.list *.img Makefile.bak  *.d

.PHONY: libs all tags clean run no-uart

# stop make from deleting these suffix'd files.
.PRECIOUS: %.list %.elf
